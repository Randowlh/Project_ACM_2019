{
	"cpp":{
		"prefix":"modint",
		"body": [
			"struct modint",
			"{",
			"	ll n;",
			"	modint() : n(0) { ; }",
			"	modint(ll m) : n(m)",
			"	{",
			"		if (n >= mod)",
			"			n %= mod;",
			"		else if (n < 0)",
			"			n = (n % mod + mod) % mod;",
			"	}",
			"	inline operator int() { return n; }",
			"	inline bool operator==(modint b) { return n == b.n; }",
			"	inline modint operator+=(modint b)",
			"	{",
			"		n += b.n;",
			"		if (n >= mod)",
			"			n -= mod;",
			"		return *this;",
			"	}",
			"	modint operator-=(modint b)",
			"	{",
			"		n -= b.n;",
			"		if (n < 0)",
			"			n += mod;",
			"		return *this;",
			"	}",
			"	modint operator*=( modint b)",
			"	{",
			"		n = ((ll)n * n) % mod;",
			"		return *this;",
			"	}",
			"};",
			"modint operator+(modint a, modint b) { return a += b; }",
			"modint operator-(modint a, modint b) { return a -= b; }",
			"modint operator*(modint a, modint b) { return a *= b; }",
			"modint operator^(modint a, int n)",
			"{",
			"	if (n == 0)",
			"		return modint(1);",
			"	modint res = (a * a) ^ (n / 2);",
			"	if (n % 2)",
			"		res = res * a;",
			"	return res;",
			"}",
			"ll inv(ll a, ll p)",
			"{",
			"	return (a == 1 ? 1 : (1 - p * inv(p % a, a)) / a + p);",
			"}",
			"modint operator/(modint a, modint b) { return a * modint(inv(b, mod)); }"
		],
		"description": "hei ke ji"
	},
}